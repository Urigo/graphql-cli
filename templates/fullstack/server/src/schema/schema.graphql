## NOTE: This schema was generated by Graphback and should not be changed manually

""" @model """
type Comment {
  id: ID!
  text: String
  description: String

  """@manyToOne field: 'comments', key: 'noteId'"""
  note: Note
}

input CommentInput {
  id: ID
  text: String
  description: String
  noteId: ID
}

type Mutation {
  createNote(input: NoteInput): Note!
  updateNote(input: NoteInput): Note!
  deleteNote(input: NoteInput): Note!
  createComment(input: CommentInput): Comment!
  updateComment(input: CommentInput): Comment!
  deleteComment(input: CommentInput): Comment!
}

""" @model """
type Note {
  id: ID!
  title: String!
  description: String

  """@oneToMany field: 'note', key: 'noteId'"""
  comments: [Comment]!
}

input NoteInput {
  id: ID
  title: String
  description: String
}

type Query {
  findAllNotes(limit: Int, offset: Int): [Note]!
  findNotes(fields: NoteInput, limit: Int, offset: Int): [Note]!
  findAllComments(limit: Int, offset: Int): [Comment]!
  findComments(fields: CommentInput, limit: Int, offset: Int): [Comment]!
}

type Subscription {
  newNote(input: NoteInput): Note!
  updatedNote(input: NoteInput): Note!
  deletedNote(input: NoteInput): Note!
  newComment(input: CommentInput): Comment!
  updatedComment(input: CommentInput): Comment!
  deletedComment(input: CommentInput): Comment!
}
